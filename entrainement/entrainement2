
Projet : Hash Hash Hash

1. Calculateur de calories

Tu as en marre d'entendre ta belle-mÃ¨re te parler de son dernier rÃ©gime Ã  la mode alors qu'elle s'enfile deux welshs chaque week-end? Alors ce petit script est fait pour toi.
1.1 Les specs

Le but est de crÃ©er un hash qui contiendra une base de donnÃ©e de repas, avec les apports nutritifs associÃ©s (glucides, lipides et protÃ©ines). Ton programme devra Ãªtre capable de calculer le nombre de calories pour un (voir plus) repas. Voici comment on va procÃ©der :

Il va falloir crÃ©er un hash de donnÃ©es par repas sous ce modÃ¨le :

WELSH = {
"Lipides" => 38.4,
"Glucides" => 18.3,
"ProtÃ©ines" => 36.3
}

Puis tu crÃ©eras une mÃ©thode weight_watchers qui calculera les calories d'un plat.

Le hash suivant sera Ã  utiliser pour ton calcul :

CALORIES = {
"Lipides" => 9,
"Glucides" => 4,
"ProtÃ©ines" => 4
}

Et du coup weight_watcher(WELSH) devra te retourner 564 calories

Mais comment je dÃ©fini un Hash ?
1. La mauvaise mÃ©thode : copier coller ce qui est Ã©crit sur la ressource du jour
2. La bonne mÃ©thode : definir le Hash (WELSH= Hash.new) puis le remplir avec les couples clÃ© valeur (WELSH["Lipides"] = 38.4)
2. Level up

Ca y est Ã§a marche pour un plat mais maintenant tu veux customiser ta mÃ©thode et faire en sorte que Ã§a marche pour un menu

Indice: on va utiliser un hash dans un hash #hashception

MENU={
 WELSH = {
  "Lipides" => 38.4,
  "Glucides" => 18.3,
  "ProtÃ©ines" => 36.3
 },
 FRITES = {
  "Lipides" => 15,
  "Glucides" => 41,
  "ProtÃ©ines" => 3.4
 },
 BIERE = {
  "Lipides" => 0,
  "Glucides" => 25,
  "ProtÃ©ines" => 4
 }
}

Tu dÃ©finira donc une autre mÃ©thode meal_weight_watchers(menu) en faisant une boucle sur le hash en entrÃ©e et en appelant ta mÃ©thode weight_watchers

Mais comment je mets un hash dans un hash (aussi appelÃ© le nesting ?
1. Je crÃ©e un hash MENU
2. Je lui donne la clÃ© WELSH et lui renseigne le contenu associÃ© (MENU["WELSH"]=WELSH)
L'addition s'il vous plaÃ®t

La junk food ca coÃ»te cher ! Tu vas crÃ©er une mÃ©thode meal_price qui va calculer le coÃ»t total de ton menu.

Ton hash de donnÃ©es ressemblera Ã  Ã§a :

MENU={
    WELSH = {
        "Lipides" => 38.4,
        "Glucides" => 18.3,
        "ProtÃ©ines" => 36.3
     },
   FRITES = {
        "Lipides" => 15,
        "Glucides" => 41,
        "ProtÃ©ines" => 3.4
     },
   BIERE = {
        "Lipides" => 0,
        "Glucides" => 25,
        "ProtÃ©ines" => 4
     },
   {PRIX=
      {WELSH = { :prix => 15 },
       FRITES = { :prix => 4 },
       BIERE = { :prix  => 5 }
      }
   }
}

Et le rÃ©sultat de meal_price(menu) sera 24 ğŸ’¶